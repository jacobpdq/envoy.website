{
  "name": "prefixr",
  "description": "Query prefixr.com in node and on the command line.",
  "version": "1.0.1",
  "license": "MIT",
  "author": {
    "name": "Florian H.",
    "email": "jscoderr@gmail.com"
  },
  "main": "lib/index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "bin": {
    "prefixr": "bin/prefixr"
  },
  "preferGlobal": true,
  "dependencies": {
    "jquery": "*",
    "argsparser": "*",
    "node-watch": "*"
  },
  "keywords": [
    "css",
    "prefixr"
  ],
  "readme": "# Prefixr on the command line\n\n[prefixr.com](http://prefixr.com) is an awesome tool that adds vendor prefixes to your CSS.\nPrefixr-CL is a node package that provides an easy way to query the Prefixr API in node and on the command line.\n\n## Installation\n\nEasy installation with [NPM](https://npmjs.org):\n\n```sh\n$ npm install -g prefixr\n```\n\n## Command line usage\n\n```sh\n$ prefixr\n\n    Usage: prefixr --input <files> [output options] [other options]\n\n    Examples:\n\n      --input base.css app.css --output styles.css\n       -i base app -o styles # Drop .css, use shortcut options.\n       -i base -o styles -e ms o # Don't add prefixes for IE and Opera\n\n    Meta:\n\n      -h, --help              print usage information\n      -v, --version           print the version number\n\n    Input and output options:\n\n      -i, --input <files>     the CSS files you want to prefix\n      -o, --output <files>    write the prefixed CSS into <files>\n      -s, --output-self       write the prefixed CSS into the input files\n      -p, --print             print the prefixed CSS\n\n    Other options:\n\n      -c, --compress          compress the prefixed CSS\n      -nv, --no-variables     keep variables\n      -e, --exclude <vendors> exclude 'moz', 'ms' and / or 'o'\n      -w, --watch             rerun command if an input file changes\n\n```\n\nThis package queries *prefixr.com* itself, so the prefixing itself can take around one second, since a HTTP request is needed.\n\nPrefix the contents of files and write the output to another file:\n```sh\n$ prefixr --input one.css two.css --output styles.css\n$ prefixr -i one two -o styles # You can drop the '.css' extension.\n```\n\nPrefix the contents of files and write the prefixed CSS of each into those files:\n```sh\n$ prefixr --input one two --output-self\n$ prefixr -i one two -s\n```\n\nPrefix the content of files and echo it into the terminal:\n```sh\n$ prefixr --input one.css --print\n$ prefixr -i one -p\n```\n\nExclude `-ms` and `-o`:\n```sh\n$ prefixr --input one.css -output-self -exclude ms o\n$ prefixr -i one -s -e ms o\n```\n\nCompress the output:\n```sh\n$ prefixr --input one.css --output styles.css --compress\n$ prefixr -i one -o styles -c\n```\n\nWatch mode:\n```sh\n$ prefixr --watch --input one.css two.css --output styles.css\n$ prefixr -w -i one two -o styles\n```\n\nMeta stuff:\n```sh\n$ prefixr\n$ prefixr -?\n$ prefixr -h\n$ prefixr --help\n\n$ prefixr -v\n$ prefixr --version\n```\n\n## Node usage\n\nThe node API provides two minimalistic functions to query the Prefixr API.\n\n```javascript\nvar prefix = require('prefixr');\n\nvar css = 'div { box-shadow: 1px 0 2px black; }';\nvar options = {\n\tcompress: true, // Default: false\n\tvariables: true, // Default: true\n\texclude: ['o', 'ms'] // Array with 'o', 'ms', 'moz' or just a plain string or 'all' to exclude all three options. Default: [].\n};\nvar callback = function (prefixed) { console.log(prefixed); }\n\nprefix(css, options, callback);\nprefix(css, callback); // The options object can be dropped.\n\nprefix.files('examples/styles.css', options, callback); // Prefix the contents of a file.\nprefix.files('examples/styles', options, callback); // The '.css' extension can be dropped.\nprefix.files(['examples/styles', 'examples/more_styles.css'], options, callback); // Prefix the contents of several files.\n```\n\n- - -\n\n## Todo\n\n- Refactoring â€“ A lot.\n- Fix watch mode in combination with `--output-self`.\n- Print time + file name when an input file changes in watch mode.",
  "_id": "prefixr@1.0.1",
  "dist": {
    "shasum": "b9fcd6806053305e4a8cd6d38bfce859c188caff",
    "tarball": "http://registry.npmjs.org/prefixr/-/prefixr-1.0.1.tgz"
  },
  "maintainers": [
    {
      "name": "jscoder",
      "email": "jscoderr@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "b9fcd6806053305e4a8cd6d38bfce859c188caff",
  "_resolved": "https://registry.npmjs.org/prefixr/-/prefixr-1.0.1.tgz",
  "_from": "prefixr@*"
}
